generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id String @id

  role              UserRole @default(Regular)
  quota             Int      @default(3000)
  dailyQuotaLimit   Int      @default(3000)
  weeklyQuotaLimit  Int      @default(20000)
  monthlyQuotaLimit Int      @default(75000)

  squeals       Squeal[]
  receivers     Receiver[]
  ownedChannels Channel[]
  reactions     Reaction[]

  @@map("users")
}

enum UserRole {
  Regular
  Premium
}

model Squeal {
  id        String   @id @default(cuid())
  content   Json
  createdAt DateTime @default(now())

  author   User   @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId String

  mentions Mention[]

  receiver   Receiver @relation(fields: [receiverId], references: [id], onDelete: Cascade)
  receiverId String

  reactions Reaction[]

  replies        Squeal[] @relation("squeal_replies")
  parentSqueal   Squeal?  @relation("squeal_replies", fields: [parentSquealId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  parentSquealId String?

  channel   Channel? @relation(fields: [channelId], references: [id], onDelete: Cascade)
  channelId String?

  @@index([authorId])
  @@index([parentSquealId])
  @@index([receiverId])
  @@index([channelId])
  @@map("squeals")
}

model Channel {
  id   String @id @default(cuid())
  name String

  owner   User   @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  ownerId String

  receivers Receiver[]
  squeals   Squeal[]

  @@index([ownerId])
  @@map("channels")
}

model Receiver {
  id   String       @id @default(cuid())
  type ReceiverType

  user      User?    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String?
  channel   Channel? @relation(fields: [channelId], references: [id], onDelete: Cascade)
  channelId String?
  squeals   Squeal[]

  @@index([userId])
  @@index([channelId])
  @@map("receivers")
}

enum ReceiverType {
  User
  Channel
}

model Mention {
  id       Int    @default(autoincrement())
  squeal   Squeal @relation(fields: [squealId], references: [id], onDelete: Cascade)
  squealId String

  @@id([id, squealId])
  @@index([squealId])
  @@map("mentions")
}

model Reaction {
  user     User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId   String
  squeal   Squeal       @relation(fields: [squealId], references: [id], onDelete: Cascade)
  squealId String
  type     ReactionType

  @@id([userId, squealId])
  @@index([squealId])
  @@index([userId])
  @@map("reactions")
}

enum ReactionType {
  Like
  Dislike
}
